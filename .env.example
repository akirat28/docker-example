# 環境変数設定ファイル
# 実際の値を設定してこのファイルを .env にコピーしてください

# Project Settings
# プロジェクト名（コンテナ名のプレフィックスとして使用）
PROJECT_NAME=docker-example

# Docker Services Profiles
# 使用するサービスをカンマ区切りで指定（例: php,mysql,phpmyadmin）
# 利用可能なサービス:
# - php: FrankenPHP (Webサーバー + PHP)
# - mysql: MySQLデータベース
# - phpmyadmin: phpMyAdmin (データベース管理)
# - mailhog: MailHog (メール送信テスト)
# - redis: Redisサーバー
# - adminer: Adminer (データベース管理)
# - redis-commander: Redis Commander (Redis管理)
# - mailpit: Mailpit (メール送信テスト - MailHogの代替)
# - ngrok: Ngrok (外部公開)
# - minio: MinIO (S3互換オブジェクトストレージ)

# 基本セット（推奨）
COMPOSE_PROFILES=php,mysql,phpmyadmin,mailhog,redis

# 全サービス
# COMPOSE_PROFILES=php,mysql,phpmyadmin,mailhog,redis,adminer,redis-commander,mailpit,ngrok,minio

# 最小構成
# COMPOSE_PROFILES=php,mysql

# Port Settings
# ポート設定（未指定の場合はデフォルト値を使用）
NGINX_PORT=80  # FrankenPHPのWebサーバーポート
MYSQL_PORT=3306
PHPMYADMIN_PORT=8080
MAILHOG_SMTP_PORT=1025
MAILHOG_WEB_PORT=8025
REDIS_PORT=6379
ADMINER_PORT=8081
REDIS_COMMANDER_PORT=8082
MAILPIT_SMTP_PORT=1026
MAILPIT_WEB_PORT=8026
NGROK_WEB_PORT=4040
MINIO_API_PORT=9000
MINIO_CONSOLE_PORT=9001

# MinIO Settings
# S3互換ストレージの認証情報
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin

# Ngrok認証トークン（オプション）
# 無料プランでも設定推奨（制限緩和）
# 取得方法: https://dashboard.ngrok.com/get-started/your-authtoken
NGROK_AUTHTOKEN=your_ngrok_authtoken_here

# 使用例:
# 1. 基本的なPHP開発環境
#    COMPOSE_PROFILES=php,mysql,phpmyadmin
#
# 2. メール送信テストを含む
#    COMPOSE_PROFILES=php,mysql,phpmyadmin,mailhog
#
# 3. Redis使用のアプリケーション
#    COMPOSE_PROFILES=php,mysql,redis,redis-commander
#
# 4. 外部公開が必要な場合
#    COMPOSE_PROFILES=php,mysql,ngrok
#
# 5. ファイルストレージを含む
#    COMPOSE_PROFILES=php,mysql,minio

# 使用方法:
# 1. このファイルを .env にコピー: cp .env.example .env
# 2. .env ファイルでCOMPOSE_PROFILESとポート設定を調整
# 3. PROJECT_NAMEでコンテナ名のプレフィックスを設定（オプション）
# 4. make up でサービス起動
# 5. make ngrok でNgrok URLを確認（ngrok有効時）

# コンテナ名について:
# PROJECT_NAME=my-project に設定すると、以下のようなコンテナ名になります:
# - my-project_php (FrankenPHP Webサーバー)
# - my-project_mysql
# - my-project_phpmyadmin
# など

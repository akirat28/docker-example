version: "3.8"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      - app-network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
      - ./src:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    #ports:
    #  - "9003:9003"
    networks:
      - app-network
    depends_on:
      - mysql
    logging: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "pgrep php-fpm || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
    ports:
      - "3306:3306"
    volumes:
      - ./db-data:/var/lib/mysql
    networks:
      - app-network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "testuser", "-ptestpassword"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    platform: linux/amd64
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: testuser
      PMA_PASSWORD: testpassword
      UPLOAD_LIMIT: 20G
    volumes:
      - ./docker/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    logging: *default-logging
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  adminer:
    image: adminer
    platform: linux/amd64
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - app-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    platform: linux/amd64
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - app-network

  mailpit:
    image: axllent/mailpit
    platform: linux/amd64
    ports:
      - "1026:1025"  # SMTP
      - "8026:8025"  # WebUI
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - app-network

  ngrok:
    image: ngrok/ngrok:latest
    platform: linux/amd64
    ports:
      - "4040:4040"  # Ngrok Web UI
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN:-}
    command: ["http", "nginx:80"]
    depends_on:
      - nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  redis-data:
